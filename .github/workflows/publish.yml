name: Publish to Hex.pm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true
        type: string

permissions:
  contents: write  # Needed for creating releases and tags

jobs:
  # Reuse the quality gate job from the main CI workflow
  quality_gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        otp: ["27"]
        elixir: ["1.18"]  # Use only latest for releases

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-
            ${{ runner.os }}-build-${{ matrix.otp }}-
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Run quality checks
        run: mix quality

  # Reuse the test job from the main CI workflow
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        otp: ["27"]
        elixir: ["1.18"]  # Use only latest for releases

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-
            ${{ runner.os }}-build-${{ matrix.otp }}-
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests
        run: mix test

  # Only runs if both quality gate and tests pass
  publish:
    name: Publish to Hex.pm
    runs-on: ubuntu-latest
    needs: [quality_gate, test]
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "27"
          elixir-version: "1.18"

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Build package
        run: mix expublish.build

      - name: Publish to Hex.pm
        run: mix expublish.publish
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

      - name: Create Git tag
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ inputs.version }}"
          release_name: "Release v${{ inputs.version }}"
          body: |
            Release v${{ inputs.version }}
            
            See [CHANGELOG.md](https://github.com/agentjido/jido_action/blob/v${{ inputs.version }}/CHANGELOG.md) for details.
          draft: false
          prerelease: false
